//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/TouchAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TouchAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TouchAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TouchAction"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""77399695-23b9-4016-b1f4-e9d585359f2d"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""2677793a-9cba-485c-82da-e0a36ca48f21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""type"": ""Value"",
                    ""id"": ""549091bc-0ab4-4151-92cd-7080d953059d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScrollUp"",
                    ""type"": ""Value"",
                    ""id"": ""1761dd44-22c5-42ff-8b14-e71884b6300b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScrollDown"",
                    ""type"": ""Value"",
                    ""id"": ""4eaea6ab-2837-4f8d-ad35-49de41e6a2d8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryFingerPos"",
                    ""type"": ""Value"",
                    ""id"": ""1b66593d-9281-4390-ba41-11ad002ec510"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryFingerPos"",
                    ""type"": ""Value"",
                    ""id"": ""3857b998-9c0b-45ac-a904-3190fc4163d1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""94f9a9ea-aa58-43a6-972f-ebe187271c5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6bf577c0-cbbc-4d6c-8719-713881d3ed35"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6855429-757a-415d-bc63-601fb3e8f92b"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d254d50f-308f-4811-9ba3-710ccec4873f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""614f59a1-a3ce-499d-a65b-329a5c6646ce"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fed446e-a52c-4c5e-8329-3950309baf60"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryFingerPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a70ec9f4-0dc5-4eb7-a8ec-813a5b3bb24a"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFingerPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62c181f4-94dc-4f41-89ed-44442b7e1671"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a7909dd-e60a-4684-94a4-e15015f89de8"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7e1286c-4c8d-4298-97e2-eaef9de17f43"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_LeftClick = m_Touch.FindAction("LeftClick", throwIfNotFound: true);
        m_Touch_MouseLook = m_Touch.FindAction("MouseLook", throwIfNotFound: true);
        m_Touch_MouseScrollUp = m_Touch.FindAction("MouseScrollUp", throwIfNotFound: true);
        m_Touch_MouseScrollDown = m_Touch.FindAction("MouseScrollDown", throwIfNotFound: true);
        m_Touch_PrimaryFingerPos = m_Touch.FindAction("PrimaryFingerPos", throwIfNotFound: true);
        m_Touch_SecondaryFingerPos = m_Touch.FindAction("SecondaryFingerPos", throwIfNotFound: true);
        m_Touch_SecondaryTouchContact = m_Touch.FindAction("SecondaryTouchContact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Touch
    private readonly InputActionMap m_Touch;
    private List<ITouchActions> m_TouchActionsCallbackInterfaces = new List<ITouchActions>();
    private readonly InputAction m_Touch_LeftClick;
    private readonly InputAction m_Touch_MouseLook;
    private readonly InputAction m_Touch_MouseScrollUp;
    private readonly InputAction m_Touch_MouseScrollDown;
    private readonly InputAction m_Touch_PrimaryFingerPos;
    private readonly InputAction m_Touch_SecondaryFingerPos;
    private readonly InputAction m_Touch_SecondaryTouchContact;
    public struct TouchActions
    {
        private @TouchAction m_Wrapper;
        public TouchActions(@TouchAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_Touch_LeftClick;
        public InputAction @MouseLook => m_Wrapper.m_Touch_MouseLook;
        public InputAction @MouseScrollUp => m_Wrapper.m_Touch_MouseScrollUp;
        public InputAction @MouseScrollDown => m_Wrapper.m_Touch_MouseScrollDown;
        public InputAction @PrimaryFingerPos => m_Wrapper.m_Touch_PrimaryFingerPos;
        public InputAction @SecondaryFingerPos => m_Wrapper.m_Touch_SecondaryFingerPos;
        public InputAction @SecondaryTouchContact => m_Wrapper.m_Touch_SecondaryTouchContact;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void AddCallbacks(ITouchActions instance)
        {
            if (instance == null || m_Wrapper.m_TouchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TouchActionsCallbackInterfaces.Add(instance);
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @MouseLook.started += instance.OnMouseLook;
            @MouseLook.performed += instance.OnMouseLook;
            @MouseLook.canceled += instance.OnMouseLook;
            @MouseScrollUp.started += instance.OnMouseScrollUp;
            @MouseScrollUp.performed += instance.OnMouseScrollUp;
            @MouseScrollUp.canceled += instance.OnMouseScrollUp;
            @MouseScrollDown.started += instance.OnMouseScrollDown;
            @MouseScrollDown.performed += instance.OnMouseScrollDown;
            @MouseScrollDown.canceled += instance.OnMouseScrollDown;
            @PrimaryFingerPos.started += instance.OnPrimaryFingerPos;
            @PrimaryFingerPos.performed += instance.OnPrimaryFingerPos;
            @PrimaryFingerPos.canceled += instance.OnPrimaryFingerPos;
            @SecondaryFingerPos.started += instance.OnSecondaryFingerPos;
            @SecondaryFingerPos.performed += instance.OnSecondaryFingerPos;
            @SecondaryFingerPos.canceled += instance.OnSecondaryFingerPos;
            @SecondaryTouchContact.started += instance.OnSecondaryTouchContact;
            @SecondaryTouchContact.performed += instance.OnSecondaryTouchContact;
            @SecondaryTouchContact.canceled += instance.OnSecondaryTouchContact;
        }

        private void UnregisterCallbacks(ITouchActions instance)
        {
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @MouseLook.started -= instance.OnMouseLook;
            @MouseLook.performed -= instance.OnMouseLook;
            @MouseLook.canceled -= instance.OnMouseLook;
            @MouseScrollUp.started -= instance.OnMouseScrollUp;
            @MouseScrollUp.performed -= instance.OnMouseScrollUp;
            @MouseScrollUp.canceled -= instance.OnMouseScrollUp;
            @MouseScrollDown.started -= instance.OnMouseScrollDown;
            @MouseScrollDown.performed -= instance.OnMouseScrollDown;
            @MouseScrollDown.canceled -= instance.OnMouseScrollDown;
            @PrimaryFingerPos.started -= instance.OnPrimaryFingerPos;
            @PrimaryFingerPos.performed -= instance.OnPrimaryFingerPos;
            @PrimaryFingerPos.canceled -= instance.OnPrimaryFingerPos;
            @SecondaryFingerPos.started -= instance.OnSecondaryFingerPos;
            @SecondaryFingerPos.performed -= instance.OnSecondaryFingerPos;
            @SecondaryFingerPos.canceled -= instance.OnSecondaryFingerPos;
            @SecondaryTouchContact.started -= instance.OnSecondaryTouchContact;
            @SecondaryTouchContact.performed -= instance.OnSecondaryTouchContact;
            @SecondaryTouchContact.canceled -= instance.OnSecondaryTouchContact;
        }

        public void RemoveCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITouchActions instance)
        {
            foreach (var item in m_Wrapper.m_TouchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TouchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    public interface ITouchActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnMouseLook(InputAction.CallbackContext context);
        void OnMouseScrollUp(InputAction.CallbackContext context);
        void OnMouseScrollDown(InputAction.CallbackContext context);
        void OnPrimaryFingerPos(InputAction.CallbackContext context);
        void OnSecondaryFingerPos(InputAction.CallbackContext context);
        void OnSecondaryTouchContact(InputAction.CallbackContext context);
    }
}
